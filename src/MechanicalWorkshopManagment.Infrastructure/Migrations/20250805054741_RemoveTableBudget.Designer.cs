// <auto-generated />
using System;
using MechanicalWorkshopManagment.Infrastructure.DataAcess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MechanicalWorkshopManagment.Infrastructure.Migrations
{
    [DbContext(typeof(MechanicalManagmentDbContext))]
    [Migration("20250805054741_RemoveTableBudget")]
    partial class RemoveTableBudget
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MechanicalWorkshopManagment.Domain.Entities.Buy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("AmountReceivable")
                        .HasColumnType("numeric(10,2)");

                    b.Property<decimal>("CostPrice")
                        .HasColumnType("numeric(10,2)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PartsId")
                        .HasColumnType("integer");

                    b.Property<int>("PurchaseStatus")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int>("StatusDelivered")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("PartsId");

                    b.ToTable("Buy");
                });

            modelBuilder.Entity("MechanicalWorkshopManagment.Domain.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CepClient")
                        .HasColumnType("text");

                    b.Property<string>("ClientName")
                        .HasColumnType("text");

                    b.Property<string>("VehiclePlate")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("MechanicalWorkshopManagment.Domain.Entities.Delivery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AddressClient")
                        .HasColumnType("text");

                    b.Property<string>("CepClient")
                        .HasColumnType("text");

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<int>("QuantityDelivered")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Delivery");
                });

            modelBuilder.Entity("MechanicalWorkshopManagment.Domain.Entities.Parts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric(10,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Parts");
                });

            modelBuilder.Entity("MechanicalWorkshopManagment.Domain.Entities.PartsBudget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AppliedPrice")
                        .HasColumnType("numeric(10,2)");

                    b.Property<int>("BudgetStatus")
                        .HasColumnType("integer");

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DatePartsBudget")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("DiscountApplied")
                        .HasColumnType("numeric(10,2)");

                    b.Property<int>("PartsId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("numeric(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("PartsId");

                    b.ToTable("PartsBudgets");
                });

            modelBuilder.Entity("MechanicalWorkshopManagment.Domain.Entities.StockMovement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Movements")
                        .HasColumnType("integer");

                    b.Property<int>("PartsId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PartsId");

                    b.ToTable("StockMovements");
                });

            modelBuilder.Entity("MechanicalWorkshopManagment.Domain.Entities.Buy", b =>
                {
                    b.HasOne("MechanicalWorkshopManagment.Domain.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MechanicalWorkshopManagment.Domain.Entities.Parts", "Parts")
                        .WithMany()
                        .HasForeignKey("PartsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Parts");
                });

            modelBuilder.Entity("MechanicalWorkshopManagment.Domain.Entities.Delivery", b =>
                {
                    b.HasOne("MechanicalWorkshopManagment.Domain.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("MechanicalWorkshopManagment.Domain.Entities.PartsBudget", b =>
                {
                    b.HasOne("MechanicalWorkshopManagment.Domain.Entities.Customer", "Customer")
                        .WithMany("PartsBudget")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MechanicalWorkshopManagment.Domain.Entities.Parts", "Parts")
                        .WithMany("PartsBudget")
                        .HasForeignKey("PartsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Parts");
                });

            modelBuilder.Entity("MechanicalWorkshopManagment.Domain.Entities.StockMovement", b =>
                {
                    b.HasOne("MechanicalWorkshopManagment.Domain.Entities.Parts", "Parts")
                        .WithMany()
                        .HasForeignKey("PartsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parts");
                });

            modelBuilder.Entity("MechanicalWorkshopManagment.Domain.Entities.Customer", b =>
                {
                    b.Navigation("PartsBudget");
                });

            modelBuilder.Entity("MechanicalWorkshopManagment.Domain.Entities.Parts", b =>
                {
                    b.Navigation("PartsBudget");
                });
#pragma warning restore 612, 618
        }
    }
}
